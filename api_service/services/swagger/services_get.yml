Find a specific service
Returns detailed information regarding the single service
---
tags:
  - Services
parameters:
  - name: after
    in: query
    type: string
    description: 'After cursor (starting page after this cursor)'
  - name: before
    in: query
    type: string
    description: 'Before cursor (starting page before this cursor)'
  - name: limit
    in: query
    type: integer
    description: 'Number of services per page'
definitions:
  Services:
    type: object
    properties:
      paging:
        type: object
        properties:
          limit:
            type: integer
            default:
      data:
        type: object
  Host:
    type: object
    properties:
      type:
        type: string
        enum: [ 'hostname', 'ip' ]
        example: 'ip'
      value:
        type: string
        example: 192.168.1.10
  Timestamps:
    type: object
    properties:
      last_responded:
        type: string
        format: date-time
        example: ''
      last_tested:
        type: string
        format: date-time
      created:
        type: string
        format: date-time
      edited:
        type: string
        format: date-time
  Service:
    type: object
    properties:
      id:
        type: string
        example: '606707904cbc3b192ef7c535'
      name:
        type: string
        example: 'home-ntp-service'
      host:
        $ref: '#/definitions/Host'
      proto:
        type: string
        enum: ['tcp', 'udp']
        example: 'udp'
      port:
        type: string
        description: Service network port
        example: '123'
      timestamps:
          $ref: '#/definitions/Timestamps'
      service_up:
        type: boolean
        example: false
  Error:
    type: object
    properties:
      message:
        type: string
      status:
        type: integer
    required:
      - message
      - status
responses:
  200:
    description: 'Details of the selected service'
    schema:
      $ref: '#/definitions/Services'
  404:
    description: 'Not found'
    schema:
      $ref: '#/definitions/Error'
  400:
    description: 'Bad request'
    schema:
      $ref: '#/definitions/Error'
